# Generated by Django 4.1.6 on 2023-02-06 18:40

import book.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('type', models.CharField(choices=[('a', 'лично, частным образом'), ('b', 'лично, профессионально'), ('c', 'онлайн'), ('d', 'другое')], max_length=50)),
                ('experience', models.CharField(choices=[('yes', 'да'), ('no', 'нет')], max_length=50)),
                ('audience', models.CharField(choices=[('a', 'в настоящий момент нет'), ('b', 'у меня маленькая аудитория'), ('c', 'у меня достаточная аудитория')], max_length=50)),
                ('is_mentor', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=70)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', book.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competence', models.CharField(max_length=255)),
                ('language', models.CharField(max_length=255)),
                ('site_url', models.TextField()),
                ('twitter_url', models.TextField(verbose_name='Twitter')),
                ('facebook_url', models.TextField(verbose_name='Facebook')),
                ('linkedin_url', models.TextField()),
                ('youtube_url', models.TextField(verbose_name='Youtube')),
                ('image', models.ImageField(blank=True, default='', null=True, upload_to='media')),
                ('is_hidden', models.BooleanField(default=False)),
                ('is_hidden_course', models.BooleanField(default=False)),
                ('promotions', models.BooleanField(default=False)),
                ('mentor_ads', models.BooleanField(default=False)),
                ('email_ads', models.BooleanField(default=True)),
                ('user_id', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
    ]
